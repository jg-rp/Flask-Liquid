[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "Flask-Liquid"
dynamic = ["version"]
description = "A Flask extension for rendering Liquid templates."
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = ["flask>=2.0", "MarkupSafe>=2.0.0", "python-liquid>=1.1.0"]

[project.urls]
"Change Log" = "https://github.com/jg-rp/flask-liquid/blob/main/CHANGES.md"
Documentation = "https://jg-rp.github.io/liquid/guides/flask-liquid"
Homepage = "https://github.com/jg-rp/flask-liquid"
"Issue Tracker" = "https://github.com/jg-rp/flask-liquid/issues"
"Source Code" = "https://github.com/jg-rp/flask-liquid"

[tool.hatch.version]
path = "flask_liquid/__init__.py"

[tool.hatch.build.targets.sdist]
packages = ["flask_liquid"]
exclude = ["/**/.mypy_cache/"]

[tool.hatch.build.targets.wheel]
packages = ["flask_liquid"]
exclude = ["/**/.mypy_cache/"]

[tool.hatch.envs.default]
dependencies = [
    "black",
    "blinker",
    "mypy",
    "pytest-cov",
    "pytest",
    "ruff",
    "twine",
    "types-cryptography",
    "asgiref>=3.2",
]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term_missing --cov-fail-under=98 --cov-config=pyproject.toml --cov=flask_liquid --cov=tests {args}"
cov-html = "pytest  --cov-report=html --cov-config=pyproject.toml --cov=flask_liquid --cov=tests {args}"
test = "pytest {args}"
lint = "ruff check ."
typing = "mypy"

[[tool.hatch.envs.test.matrix]]
python = ["38", "39", "310", "311", "312", "pypy38", "pypy39", "pypy310"]
flask = ["2", "3"]

[tool.hatch.envs.test.overrides]
matrix.flask.dependencies = [
    { value = "flask==2.3.3", if = [
        "2",
    ] },
    { value = "flask>=3.0", if = [
        "3",
    ] },
]

[tool.hatch.envs.test.scripts]
test = "pytest {args}"

[tool.coverage.run]
branch = true
parallel = true
omit = []

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.mypy]
files = "flask_liquid"
python_version = "3.10"
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
local_partial_types = true
no_implicit_reexport = true
strict = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = false
warn_return_any = true
warn_unreachable = true

[tool.ruff]
select = [
    "A",
    "ARG",
    "B",
    "BLE",
    "C4",
    "D",
    "E",
    "F",
    "I",
    "ICN",
    "ISC",
    "N",
    "PIE",
    "PL",
    "PT",
    "Q",
    "RET",
    "RSE",
    "S",
    "SIM",
    "SLF",
    "T10",
    "T20",
    "TCH",
    "YTT",
]

ignore = [
    "S105",
    "S101",
    "D107",
    "D105",
    "PLR0913",
    "D401",
    "N818",
    "PT009",
    "B905",
]

fixable = ["I", "SIM", "D202"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.isort]
force-single-line = true

[tool.ruff.pydocstyle]
convention = "google"


[tool.ruff.per-file-ignores]
"flask_liquid/__init__.py" = ["D104", "I001"]
"tests/*" = ["D100", "D101", "D104", "D103", "D102", "D209", "D205", "SIM117"]
